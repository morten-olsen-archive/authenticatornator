[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/AuthClient.js",
    "content": "import axios from 'axios';\nimport configManager from 'config';\n\nconst defaultOptions = {\n  tokenType: 'authorization_code',\n};\n\n/**\n  @typedef {Object} TokenTypes\n  @property {string} baseUrl\n  @property {string} clientId\n*/\n\n/**\n  @typedef {Object} ResponseTypes\n  @property {string} baseUrl\n  @property {string} clientId\n*/\n\n/**\n  @typedef {Object} Options\n  @property {string} baseUrl\n  @property {string} clientId\n  @property {string} [clientSecret]\n  @property {string} redirectUri\n  @property {ResponseTypes[]} responseTypes\n  @property {string[]} scopes\n  @property {Store} [store]\n  @property {TokenTypes} [tokenType]\n  @property {Crypto} [crypto]\n  @property {string} [username]\n  @property {string} [password]\n  @property {string} [refreshToken]\n  @property {string[]} [acrs]\n*/\n\n/**\n  @typedef {Object} TokenResponse\n*/\n\n/**\n * Client\n *\n * @example\n * const authClient = new AuthClient({\n *   baseUrl: 'https://your-open-id-server.com',\n *   clientId: 'your_client_id',\n *   redirectUri: 'https://your-site.com',\n *   responseTypes: ['id_token', 'token'],\n *   scopes: [\n *     'openid',\n *     'profile',\n *   ],\n * });\n *\n * const url = await authClient.getLoginUrl();\n * window.location.href = url;\n */\nclass AuthClient {\n  /**\n   *\n   * @param {Options} options\n   */\n  constructor(options) {\n    /** @ignore */\n    this._options = {\n      ...defaultOptions,\n      store: configManager.get('createStore')\n        ? configManager.get('createStore')()\n        : undefined,\n      crypto: configManager.get('createCrypto')\n        ? configManager.get('createCrypto')()\n        : undefined,\n      ...options,\n    };\n  }\n\n  /** @ignore */\n  async _getConfiguration(options) {\n    const { baseUrl } = options;\n    const url = `${baseUrl}/.well-known/openid-configuration`;\n    const response = await axios.get(url);\n    return response.data;\n  }\n\n  /** @ignore */\n  /* async _getKeys(options) {\n    const { baseUrl } = options;\n    const url = `${baseUrl}/.well-known/openid-configuration/jwks`;\n    const response = await axios.get(url);\n    return response.data;\n  } */\n\n  /** @ignore */\n  async _createVerifier(options) {\n    const { crypto } = options;\n    const verifier = crypto.random();\n    const challengeBytes = await crypto.sha256(verifier);\n    const challenge = await crypto.bytesToBase64(challengeBytes);\n    return {\n      verifier,\n      challenge,\n    };\n  }\n\n  /** @ignore */\n  async _createRequestUrl(options, { authorization_endpoint: authorizationEndpoint }) {\n    const { store, crypto } = this._options;\n    /* eslint-disable camelcase */\n    const {\n      clientId: client_id, redirectUri: redirect_uri,\n      scopes = [], responseTypes = ['code'], extra = {},\n      pkce: pkceEnabled,\n    } = options;\n\n    const state = crypto ? crypto.random() : undefined;\n    const pkce = crypto && pkceEnabled ? await this._createVerifier(options) : undefined;\n\n    const params = {\n      client_id,\n      redirect_uri,\n      scope: scopes ? scopes.join(' ') : undefined,\n      code_challenge: pkce ? pkce.challenge : undefined,\n      code_challenge_method: pkce ? 'S256' : undefined,\n      response_type: responseTypes.join(' '),\n      state,\n      nonce: responseTypes.includes('id_token') && crypto ? crypto.random() : undefined,\n      ...extra,\n    };\n    /* eslint-enable camelcase */\n    if (store) {\n      await store.setItem(state, { ...params, ...pkce });\n    }\n    const parts = Object.keys(params).filter(key => params[key]).map(key => `${key}=${encodeURIComponent(params[key])}`);\n    return `${authorizationEndpoint}?${parts.join('&')}`;\n  }\n\n  /** @ignore */\n  _parseUrl(url) {\n    const [, query] = url.split(url.indexOf('#') >= 0 ? '#' : '?');\n    if (!query) {\n      return {};\n    }\n    return query.split('&').reduce((output, current) => {\n      const [name, value] = current.split('=');\n      return {\n        ...output,\n        [name]: decodeURIComponent(value),\n      };\n    }, {});\n  }\n\n  /** @ignore */\n  async _requestToken(options, config) {\n    const {\n      clientId, tokenType, refreshToken,\n      store, code, sessionId, clientSecret,\n      redirectUri, username, password, scopes,\n    } = options;\n\n    const session = store ? await store.getItem(sessionId) : undefined;\n    const response = await axios.post(config.token_endpoint, {\n      client_id: clientId,\n      client_secret: clientSecret,\n      redirect_uri: redirectUri,\n      grant_type: password ? 'password' : tokenType,\n      username,\n      password,\n      code,\n      scope: scopes ? scopes.join(' ') : undefined,\n      refresh_token: refreshToken,\n      code_verifier: session ? session.verifier : undefined,\n    });\n    if (sessionId) {\n      store.removeItem(sessionId);\n    }\n    return response.data;\n  }\n\n  /**\n   * A method to test id a given url contains the information\n   * needed to extract or generate a token\n   * @param {string} url The url containing the server informations\n   * @returns {bool} indicates it the url is valid\n   */\n  async isValidUrl(url) {\n    const params = await this._parseUrl(url);\n    return !!params.access_token || !!params.code;\n  }\n\n  /**\n   * Generate a login url which the application should show to the user\n   * @param {Options} options the options combined which will be combined\n   *                          with the client's global options\n   * @returns {string} The resulting url which should be shown to the user\n   * @example\n   * const url = await authClient.getLoginUrl();\n   * location.href = url;\n   */\n  async getLoginUrl(options) {\n    const extendedOptions = {\n      ...this._options,\n      options,\n    };\n    const config = await this._getConfiguration(extendedOptions);\n    const request = await this._createRequestUrl(extendedOptions, config);\n    return request;\n  }\n\n  /**\n   * Transform a redirect url into a valid token\n   * @param {string} url The url containing the server informations\n   * @param {Options} options the options combined which will be combined\n   *                          with the client's global options\n   * @returns {TokenResponse} The resulting token\n   * @example\n   * if (window.location.hash) {\n   *   const token = await authClient.exchangeToken(window.location.href);\n   * }\n   */\n  async exchangeToken(url, options) {\n    const extendedOptions = {\n      ...this._options,\n      options,\n    };\n    const {\n      store,\n    } = extendedOptions;\n    const codeResponse = await this._parseUrl(url);\n\n    if (codeResponse.access_token) {\n      if (store) {\n        store.removeItem(codeResponse.session_state);\n      }\n      return codeResponse;\n    } else if (codeResponse.code) {\n      const config = await this._getConfiguration(extendedOptions);\n      const response = await this._requestToken({\n        code: codeResponse.code,\n        sessionId: codeResponse.state,\n        ...extendedOptions,\n      }, config);\n\n      return response;\n    }\n    return undefined;\n  }\n\n  /**\n   * Generates a new token, either using the refreshToken or the username\n   * and password supplied to options\n   * @param {Options} options the options combined which will be combined\n   *                          with the client's global options\n   * @returns {TokenResponse} The resulting token\n   * @example\n   * const token = await authClient.getToken({\n   *   username: 'admin',\n   *   password: 'god',\n   * });\n   */\n  async getToken(options) {\n    const extendedOptions = {\n      ...this._options,\n      scopes: undefined,\n      ...options,\n    };\n    const config = await this._getConfiguration(extendedOptions);\n    const response = await this._requestToken(extendedOptions, config);\n    return response;\n  }\n}\n\nexport default AuthClient;\n",
    "static": true,
    "longname": "/Users/morten/Projects/sampension/auth-client/src/AuthClient.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/AuthClient.js",
    "static": true,
    "longname": "src/AuthClient.js~_extends",
    "access": "private",
    "export": false,
    "importPath": "authenticatornator",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "_asyncToGenerator",
    "memberof": "src/AuthClient.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/AuthClient.js~_asyncToGenerator",
    "access": "private",
    "export": false,
    "importPath": "authenticatornator",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "defaultOptions",
    "memberof": "src/AuthClient.js",
    "static": true,
    "longname": "src/AuthClient.js~defaultOptions",
    "access": "public",
    "export": false,
    "importPath": "authenticatornator",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"tokenType\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "typedef",
    "name": "TokenTypes",
    "memberof": "src/AuthClient.js",
    "static": true,
    "longname": "src/AuthClient.js~TokenTypes",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "baseUrl",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "clientId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TokenTypes"
    }
  },
  {
    "__docId__": 53,
    "kind": "typedef",
    "name": "ResponseTypes",
    "memberof": "src/AuthClient.js",
    "static": true,
    "longname": "src/AuthClient.js~ResponseTypes",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "baseUrl",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "clientId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ResponseTypes"
    }
  },
  {
    "__docId__": 54,
    "kind": "typedef",
    "name": "Options",
    "memberof": "src/AuthClient.js",
    "static": true,
    "longname": "src/AuthClient.js~Options",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "baseUrl",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "clientId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "clientSecret",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "redirectUri",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ResponseTypes[]"
        ],
        "spread": false,
        "optional": false,
        "name": "responseTypes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "scopes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Store"
        ],
        "spread": false,
        "optional": true,
        "name": "store",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "TokenTypes"
        ],
        "spread": false,
        "optional": true,
        "name": "tokenType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Crypto"
        ],
        "spread": false,
        "optional": true,
        "name": "crypto",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "username",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "password",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "refreshToken",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "acrs",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Options"
    }
  },
  {
    "__docId__": 55,
    "kind": "typedef",
    "name": "TokenResponse",
    "memberof": "src/AuthClient.js",
    "static": true,
    "longname": "src/AuthClient.js~TokenResponse",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TokenResponse"
    }
  },
  {
    "__docId__": 56,
    "kind": "class",
    "name": "AuthClient",
    "memberof": "src/AuthClient.js",
    "static": true,
    "longname": "src/AuthClient.js~AuthClient",
    "access": "public",
    "export": true,
    "importPath": "authenticatornator",
    "importStyle": "AuthClient",
    "description": "Client",
    "examples": [
      "const authClient = new AuthClient({\n  baseUrl: 'https://your-open-id-server.com',\n  clientId: 'your_client_id',\n  redirectUri: 'https://your-site.com',\n  responseTypes: ['id_token', 'token'],\n  scopes: [\n    'openid',\n    'profile',\n  ],\n});\n\nconst url = await authClient.getLoginUrl();\nwindow.location.href = url;"
    ],
    "lineNumber": 63,
    "interface": false
  },
  {
    "__docId__": 57,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/AuthClient.js~AuthClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AuthClient.js~AuthClient#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "Options"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "_options",
    "memberof": "src/AuthClient.js~AuthClient",
    "static": false,
    "longname": "src/AuthClient.js~AuthClient#_options",
    "access": "private",
    "description": null,
    "lineNumber": 70,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "_getConfiguration",
    "memberof": "src/AuthClient.js~AuthClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AuthClient.js~AuthClient#_getConfiguration",
    "access": "private",
    "description": null,
    "lineNumber": 77,
    "ignore": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "_createVerifier",
    "memberof": "src/AuthClient.js~AuthClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AuthClient.js~AuthClient#_createVerifier",
    "access": "private",
    "description": null,
    "lineNumber": 95,
    "ignore": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "_createRequestUrl",
    "memberof": "src/AuthClient.js~AuthClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AuthClient.js~AuthClient#_createRequestUrl",
    "access": "private",
    "description": null,
    "lineNumber": 109,
    "ignore": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"authorization_endpoint\": *}"
        ],
        "defaultRaw": {
          "authorization_endpoint": null
        },
        "defaultValue": "{\"authorization_endpoint\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "_parseUrl",
    "memberof": "src/AuthClient.js~AuthClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AuthClient.js~AuthClient#_parseUrl",
    "access": "private",
    "description": null,
    "lineNumber": 148,
    "ignore": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "_requestToken",
    "memberof": "src/AuthClient.js~AuthClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AuthClient.js~AuthClient#_requestToken",
    "access": "private",
    "description": null,
    "lineNumber": 162,
    "ignore": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      },
      {
        "name": "config",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "isValidUrl",
    "memberof": "src/AuthClient.js~AuthClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AuthClient.js~AuthClient#isValidUrl",
    "access": "public",
    "description": "A method to test id a given url contains the information\nneeded to extract or generate a token",
    "lineNumber": 196,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{bool} indicates it the url is valid"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The url containing the server informations"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "bool"
      ],
      "spread": false,
      "description": "indicates it the url is valid"
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "getLoginUrl",
    "memberof": "src/AuthClient.js~AuthClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AuthClient.js~AuthClient#getLoginUrl",
    "access": "public",
    "description": "Generate a login url which the application should show to the user",
    "examples": [
      "const url = await authClient.getLoginUrl();\nlocation.href = url;"
    ],
    "lineNumber": 214,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} The resulting url which should be shown to the user"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Options"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "the options combined which will be combined\n                         with the client's global options"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The resulting url which should be shown to the user"
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "exchangeToken",
    "memberof": "src/AuthClient.js~AuthClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AuthClient.js~AuthClient#exchangeToken",
    "access": "public",
    "description": "Transform a redirect url into a valid token",
    "examples": [
      "if (window.location.hash) {\n  const token = await authClient.exchangeToken(window.location.href);\n}"
    ],
    "lineNumber": 238,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TokenResponse} The resulting token"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The url containing the server informations"
      },
      {
        "nullable": null,
        "types": [
          "Options"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "the options combined which will be combined\n                         with the client's global options"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TokenResponse"
      ],
      "spread": false,
      "description": "The resulting token"
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "getToken",
    "memberof": "src/AuthClient.js~AuthClient",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AuthClient.js~AuthClient#getToken",
    "access": "public",
    "description": "Generates a new token, either using the refreshToken or the username\nand password supplied to options",
    "examples": [
      "const token = await authClient.getToken({\n  username: 'admin',\n  password: 'god',\n});"
    ],
    "lineNumber": 280,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TokenResponse} The resulting token"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Options"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "the options combined which will be combined\n                         with the client's global options"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TokenResponse"
      ],
      "spread": false,
      "description": "The resulting token"
    }
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/AuthClient.spec.js",
    "content": "import url from 'url';\nimport axios from 'axios';\nimport querystring from 'querystring';\nimport AuthClient from './AuthClient';\nimport Crypto from './Crypto.node';\nimport Store from './Store.node';\nimport config from '../demo/config';\n\njest.mock('axios');\n\ndescribe('AuthClient', () => {\n  beforeEach(() => {\n    axios.clear();\n    axios.setMock('get', 'https://authclient-demo.eu.auth0.com/.well-known/openid-configuration', {\n      authorization_endpoint: 'https://authclient-demo.eu.auth0.com/authorize',\n      token_endpoint: 'https://authclient-demo.eu.auth0.com/token',\n    });\n    axios.setMock('post', 'https://authclient-demo.eu.auth0.com/token', (data, extra) => extra.tokenAssert(data));\n  });\n\n  describe('implicit grant', () => {\n    describe('url generator', () => {\n      it('without crypto', async () => {\n        const client = new AuthClient(config.implicit);\n        const result = await client.getLoginUrl();\n        const parsed = url.parse(result);\n        const query = querystring.parse(parsed.query);\n        expect(parsed.host).toBe('authclient-demo.eu.auth0.com');\n        expect(query.client_id).toBe(config.implicit.clientId);\n        expect(query.code_challenge).toBeUndefined();\n        expect(query.code_challenge_method).toBeUndefined();\n        expect(query.redirect_uri).toBe('about://blank');\n        expect(query.response_type).toBe('id_token token');\n        expect(query.scope).toBe('openid profile');\n        expect(query.state).toBeUndefined();\n      });\n\n      it('with crypto', async () => {\n        const client = new AuthClient({\n          ...config.implicit,\n          crypto: new Crypto(),\n        });\n        const result = await client.getLoginUrl();\n        const parsed = url.parse(result);\n        const query = querystring.parse(parsed.query);\n        expect(parsed.host).toBe('authclient-demo.eu.auth0.com');\n        expect(query.client_id).toBe(config.implicit.clientId);\n        expect(query.code_challenge).toBeDefined();\n        expect(query.code_challenge_method).toBe('S256');\n        expect(query.redirect_uri).toBe('about://blank');\n        expect(query.response_type).toBe('id_token token');\n        expect(query.scope).toBe('openid profile');\n        expect(query.state).toBeDefined();\n      });\n    });\n\n\n    describe('token exchange', () => {\n      it('with query parameter', async () => {\n        const client = new AuthClient(config.implicit);\n        const token = await client.exchangeToken('https://localhost?access_token=test');\n        expect(token.access_token).toBe('test');\n      });\n\n      it('with hash', async () => {\n        const client = new AuthClient(config.implicit);\n        const token = await client.exchangeToken('https://localhost#access_token=test');\n        expect(token.access_token).toBe('test');\n      });\n    });\n  });\n\n  describe('authentication code grant', () => {\n    describe('url generator', () => {\n      it('without crypto', async () => {\n        const client = new AuthClient(config.authCode);\n        const result = await client.getLoginUrl();\n        const parsed = url.parse(result);\n        const query = querystring.parse(parsed.query);\n        expect(parsed.host).toBe('authclient-demo.eu.auth0.com');\n        expect(query.client_id).toBe(config.authCode.clientId);\n        expect(query.code_challenge).toBeUndefined();\n        expect(query.code_challenge_method).toBeUndefined();\n        expect(query.redirect_uri).toBe('about://blank');\n        expect(query.response_type).toBe('code');\n        expect(query.scope).toBe('openid profile');\n        expect(query.state).toBeUndefined();\n      });\n\n      it('with crypto', async () => {\n        const client = new AuthClient({\n          ...config.authCode,\n          crypto: new Crypto(),\n        });\n        const result = await client.getLoginUrl();\n        const parsed = url.parse(result);\n        const query = querystring.parse(parsed.query);\n        expect(parsed.host).toBe('authclient-demo.eu.auth0.com');\n        expect(query.client_id).toBe(config.authCode.clientId);\n        expect(query.code_challenge).toBeDefined();\n        expect(query.code_challenge_method).toBe('S256');\n        expect(query.redirect_uri).toBe('about://blank');\n        expect(query.response_type).toBe('code');\n        expect(query.scope).toBe('openid profile');\n        expect(query.state).toBeDefined();\n      });\n    });\n\n    describe('token exchange', () => {\n      it('without crypto', async () => {\n        const client = new AuthClient(config.authCode);\n        axios.setExtra({\n          tokenAssert: (data) => {\n            expect(data.client_id).toBe(config.authCode.clientId);\n            expect(data.client_secret).toBe(config.authCode.clientSecret);\n            expect(data.redirect_uri).toBe('about://blank');\n            expect(data.grant_type).toBe('authorization_code');\n            expect(data.username).toBeUndefined();\n            expect(data.password).toBeUndefined();\n            expect(data.code).toBe('test');\n            expect(data.scope).toBe('openid profile');\n            expect(data.refresh_token).toBeUndefined();\n            expect(data.code_verifier).toBeUndefined();\n            return {\n              access_token: 'test2',\n            };\n          },\n        });\n        const token = await client.exchangeToken('https://localhost?code=test');\n        expect(token.access_token).toBe('test2');\n      });\n\n      it('with crypto', async () => {\n        const store = new Store();\n        const crypto = new Crypto();\n        const client = new AuthClient({\n          ...config.authCode,\n          crypto,\n          store,\n        });\n        const result = await client.getLoginUrl();\n        const parsed = url.parse(result);\n        const query = querystring.parse(parsed.query);\n        expect(query.state).toBeDefined();\n        axios.setExtra({\n          tokenAssert: async (data) => {\n            expect(data.client_id).toBe(config.authCode.clientId);\n            expect(data.client_secret).toBe(config.authCode.clientSecret);\n            expect(data.redirect_uri).toBe('about://blank');\n            expect(data.grant_type).toBe('authorization_code');\n            expect(data.username).toBeUndefined();\n            expect(data.password).toBeUndefined();\n            expect(data.code).toBe('test');\n            expect(data.scope).toBe('openid profile');\n            expect(data.refresh_token).toBeUndefined();\n            expect(data.code_verifier).toBeDefined();\n            const challenge = query.code_challenge;\n            expect(crypto.bytesToBase64(await crypto.sha256(data.code_verifier))).toBe(challenge);\n            expect(challenge).toBeDefined();\n            return {\n              access_token: 'test2',\n            };\n          },\n        });\n        const token = await client.exchangeToken(`https://localhost?code=test&state=${query.state}`);\n        expect(token.access_token).toBe('test2');\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/morten/Projects/sampension/auth-client/src/AuthClient.spec.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/AuthClient.spec.js",
    "static": true,
    "longname": "src/AuthClient.spec.js~_extends",
    "access": "private",
    "export": false,
    "importPath": "authenticatornator/lib/AuthClient.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "_asyncToGenerator",
    "memberof": "src/AuthClient.spec.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/AuthClient.spec.js~_asyncToGenerator",
    "access": "private",
    "export": false,
    "importPath": "authenticatornator/lib/AuthClient.spec.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/Crypto.js",
    "content": "import crypto from 'crypto';\n\nfunction base64URLEncode(str) {\n  return str.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nclass NodeCrypto {\n  async sha256(value) {\n    return crypto.createHash('sha256').update(value).digest();\n  }\n\n  bytesToBase64(value) {\n    return base64URLEncode(value);\n  }\n\n  random(sizeInBytes = 32) {\n    return base64URLEncode(crypto.randomBytes(sizeInBytes));\n  }\n}\n\nexport default NodeCrypto;\n",
    "static": true,
    "longname": "/Users/morten/Projects/sampension/auth-client/src/Crypto.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "_asyncToGenerator",
    "memberof": "src/Crypto.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Crypto.js~_asyncToGenerator",
    "access": "private",
    "export": false,
    "importPath": "authenticatornator/lib/Crypto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "base64URLEncode",
    "memberof": "src/Crypto.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Crypto.js~base64URLEncode",
    "access": "public",
    "export": false,
    "importPath": "authenticatornator/lib/Crypto.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 74,
    "kind": "class",
    "name": "NodeCrypto",
    "memberof": "src/Crypto.js",
    "static": true,
    "longname": "src/Crypto.js~NodeCrypto",
    "access": "public",
    "export": true,
    "importPath": "authenticatornator/lib/Crypto.js",
    "importStyle": "NodeCrypto",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "sha256",
    "memberof": "src/Crypto.js~NodeCrypto",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Crypto.js~NodeCrypto#sha256",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "bytesToBase64",
    "memberof": "src/Crypto.js~NodeCrypto",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Crypto.js~NodeCrypto#bytesToBase64",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "random",
    "memberof": "src/Crypto.js~NodeCrypto",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Crypto.js~NodeCrypto#random",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "sizeInBytes",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 32,
        "defaultValue": "32"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "src/Crypto.web.js",
    "content": "const CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst HAS_CRYPTO = typeof window !== 'undefined' && !!global.crypto;\nconst encoder = global.TextEncoder ? new global.TextEncoder('utf-8') : undefined;\n\n/** @ignore */\nconst arrayBufferToBase64 = (buffer) => {\n  let binary = '';\n  const bytes = new global.Uint8Array(buffer);\n  const len = bytes.byteLength;\n  for (let i = 0; i < len; i += 1) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return global.btoa(binary).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n};\n\n/** @ignore */\nexport const bufferToString = (buffer) => {\n  const state = [];\n  for (let i = 0; i < buffer.byteLength; i += 1) {\n    const index = (buffer[i] % CHARSET.length) | 0; // eslint-disable-line no-bitwise\n    state.push(CHARSET[index]);\n  }\n  return state.join('').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n};\n\nclass Crypto {\n  async sha256(value) {\n    const encoded = encoder.encode(value);\n    const hashed = await global.crypto.subtle.digest('SHA-256', encoded);\n    return hashed;\n  }\n\n  bytesToBase64(value) {\n    return arrayBufferToBase64(value);\n  }\n\n  random(sizeInBytes = 32) {\n    const buffer = new Uint8Array(sizeInBytes);\n    if (HAS_CRYPTO) {\n      global.crypto.getRandomValues(buffer);\n    } else {\n      // fall back to Math.random() if nothing else is available\n      for (let i = 0; i < sizeInBytes; i += 1) {\n        buffer[i] = Math.random();\n      }\n    }\n    return bufferToString(buffer);\n  }\n}\n\nexport default Crypto;\n",
    "static": true,
    "longname": "/Users/morten/Projects/sampension/auth-client/src/Crypto.web.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "_asyncToGenerator",
    "memberof": "src/Crypto.web.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Crypto.web.js~_asyncToGenerator",
    "access": "private",
    "export": false,
    "importPath": "authenticatornator/lib/Crypto.web.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "CHARSET",
    "memberof": "src/Crypto.web.js",
    "static": true,
    "longname": "src/Crypto.web.js~CHARSET",
    "access": "public",
    "export": false,
    "importPath": "authenticatornator/lib/Crypto.web.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "HAS_CRYPTO",
    "memberof": "src/Crypto.web.js",
    "static": true,
    "longname": "src/Crypto.web.js~HAS_CRYPTO",
    "access": "public",
    "export": false,
    "importPath": "authenticatornator/lib/Crypto.web.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "encoder",
    "memberof": "src/Crypto.web.js",
    "static": true,
    "longname": "src/Crypto.web.js~encoder",
    "access": "public",
    "export": false,
    "importPath": "authenticatornator/lib/Crypto.web.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "arrayBufferToBase64",
    "memberof": "src/Crypto.web.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Crypto.web.js~arrayBufferToBase64",
    "access": "public",
    "export": false,
    "importPath": "authenticatornator/lib/Crypto.web.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "ignore": true,
    "params": [
      {
        "name": "buffer",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "bufferToString",
    "memberof": "src/Crypto.web.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Crypto.web.js~bufferToString",
    "access": "public",
    "export": true,
    "importPath": "authenticatornator/lib/Crypto.web.js",
    "importStyle": "{bufferToString}",
    "description": null,
    "lineNumber": 19,
    "ignore": true,
    "params": [
      {
        "name": "buffer",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "class",
    "name": "Crypto",
    "memberof": "src/Crypto.web.js",
    "static": true,
    "longname": "src/Crypto.web.js~Crypto",
    "access": "public",
    "export": true,
    "importPath": "authenticatornator/lib/Crypto.web.js",
    "importStyle": "Crypto",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "sha256",
    "memberof": "src/Crypto.web.js~Crypto",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Crypto.web.js~Crypto#sha256",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "bytesToBase64",
    "memberof": "src/Crypto.web.js~Crypto",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Crypto.web.js~Crypto#bytesToBase64",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "random",
    "memberof": "src/Crypto.web.js~Crypto",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Crypto.web.js~Crypto#random",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "sizeInBytes",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 32,
        "defaultValue": "32"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/Store.js",
    "content": "class NodeStore {\n  constructor() {\n    this._data = {};\n  }\n\n  async getItem(name) {\n    return this._data[name];\n  }\n\n  async setItem(name, value) {\n    this._data[name] = value;\n  }\n\n  async removeItem(name) {\n    delete this._data[name];\n  }\n}\n\nexport default NodeStore;\n",
    "static": true,
    "longname": "/Users/morten/Projects/sampension/auth-client/src/Store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "_asyncToGenerator",
    "memberof": "src/Store.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Store.js~_asyncToGenerator",
    "access": "private",
    "export": false,
    "importPath": "authenticatornator/lib/Store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "class",
    "name": "NodeStore",
    "memberof": "src/Store.js",
    "static": true,
    "longname": "src/Store.js~NodeStore",
    "access": "public",
    "export": true,
    "importPath": "authenticatornator/lib/Store.js",
    "importStyle": "NodeStore",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 92,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Store.js~NodeStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Store.js~NodeStore#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "_data",
    "memberof": "src/Store.js~NodeStore",
    "static": false,
    "longname": "src/Store.js~NodeStore#_data",
    "access": "private",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "getItem",
    "memberof": "src/Store.js~NodeStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Store.js~NodeStore#getItem",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "setItem",
    "memberof": "src/Store.js~NodeStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Store.js~NodeStore#setItem",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "removeItem",
    "memberof": "src/Store.js~NodeStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Store.js~NodeStore#removeItem",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "src/Store.web.js",
    "content": "class Store {\n  constructor(prefix) {\n    this._prefix = prefix;\n  }\n\n  async getItem(name) {\n    const key = `${this._prefix}${name}`;\n    const raw = global.localStorage.getItem(key);\n    if (raw) {\n      return JSON.parse(raw);\n    }\n    return undefined;\n  }\n\n  async setItem(name, value) {\n    const key = `${this._prefix}${name}`;\n    global.localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  async removeItem(name) {\n    const key = `${this._prefix}${name}`;\n    global.localStorage.removeItem(key);\n  }\n}\n\nexport default Store;\n",
    "static": true,
    "longname": "/Users/morten/Projects/sampension/auth-client/src/Store.web.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "_asyncToGenerator",
    "memberof": "src/Store.web.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Store.web.js~_asyncToGenerator",
    "access": "private",
    "export": false,
    "importPath": "authenticatornator/lib/Store.web.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "class",
    "name": "Store",
    "memberof": "src/Store.web.js",
    "static": true,
    "longname": "src/Store.web.js~Store",
    "access": "public",
    "export": true,
    "importPath": "authenticatornator/lib/Store.web.js",
    "importStyle": "Store",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 100,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Store.web.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Store.web.js~Store#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "_prefix",
    "memberof": "src/Store.web.js~Store",
    "static": false,
    "longname": "src/Store.web.js~Store#_prefix",
    "access": "private",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "getItem",
    "memberof": "src/Store.web.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Store.web.js~Store#getItem",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "setItem",
    "memberof": "src/Store.web.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Store.web.js~Store#setItem",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "removeItem",
    "memberof": "src/Store.web.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Store.web.js~Store#removeItem",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "src/__mocks__/axios.js",
    "content": "/** @ignore */\nclass Axios {\n  mocks = [];\n  extra = {};\n\n  clear() {\n    this.mocks = [];\n    this.extra = {};\n  }\n\n  setExtra(data) {\n    this.extra = {\n      ...this.extra,\n      ...data,\n    };\n  }\n\n  setMock(method, url, responseData) {\n    this.mocks.push({\n      url,\n      method,\n      responseData,\n    });\n  }\n\n  getMock(method, url, data) {\n    let reponseData;\n    const mock = this.mocks.find(m => m.url === url && m.method === method);\n    if (mock) {\n      reponseData = typeof mock.responseData === 'function' ? mock.responseData(data, this.extra) : mock.responseData;\n    }\n    return {\n      data: reponseData,\n    };\n  }\n\n  async get(url) {\n    return this.getMock('get', url);\n  }\n\n  async post(url, data) {\n    return this.getMock('post', url, data);\n  }\n}\n\nexport default new Axios();\n",
    "static": true,
    "longname": "/Users/morten/Projects/sampension/auth-client/src/__mocks__/axios.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "_extends",
    "memberof": "src/__mocks__/axios.js",
    "static": true,
    "longname": "src/__mocks__/axios.js~_extends",
    "access": "private",
    "export": false,
    "importPath": "authenticatornator/lib/__mocks__/axios.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "_asyncToGenerator",
    "memberof": "src/__mocks__/axios.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/__mocks__/axios.js~_asyncToGenerator",
    "access": "private",
    "export": false,
    "importPath": "authenticatornator/lib/__mocks__/axios.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "class",
    "name": "Axios",
    "memberof": "src/__mocks__/axios.js",
    "static": true,
    "longname": "src/__mocks__/axios.js~Axios",
    "access": "public",
    "export": true,
    "importPath": "authenticatornator/lib/__mocks__/axios.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "ignore": true,
    "pseudoExport": true,
    "interface": false
  },
  {
    "__docId__": 109,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/__mocks__/axios.js~Axios",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/__mocks__/axios.js~Axios#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "mocks",
    "memberof": "src/__mocks__/axios.js~Axios",
    "static": false,
    "longname": "src/__mocks__/axios.js~Axios#mocks",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "member",
    "name": "extra",
    "memberof": "src/__mocks__/axios.js~Axios",
    "static": false,
    "longname": "src/__mocks__/axios.js~Axios#extra",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "clear",
    "memberof": "src/__mocks__/axios.js~Axios",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/__mocks__/axios.js~Axios#clear",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "setExtra",
    "memberof": "src/__mocks__/axios.js~Axios",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/__mocks__/axios.js~Axios#setExtra",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "setMock",
    "memberof": "src/__mocks__/axios.js~Axios",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/__mocks__/axios.js~Axios#setMock",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "method",
        "types": [
          "*"
        ]
      },
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "responseData",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "getMock",
    "memberof": "src/__mocks__/axios.js~Axios",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/__mocks__/axios.js~Axios#getMock",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "method",
        "types": [
          "*"
        ]
      },
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"data\": *}"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "get",
    "memberof": "src/__mocks__/axios.js~Axios",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/__mocks__/axios.js~Axios#get",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "post",
    "memberof": "src/__mocks__/axios.js~Axios",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/__mocks__/axios.js~Axios#post",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "variable",
    "name": "axios",
    "memberof": "src/__mocks__/axios.js",
    "static": true,
    "longname": "src/__mocks__/axios.js~axios",
    "access": "public",
    "export": true,
    "importPath": "authenticatornator/lib/__mocks__/axios.js",
    "importStyle": "axios",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "src/__mocks__/axios.js~Axios"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "src/config.js",
    "content": "/** @ignore */\nclass Config {\n  values = {};\n\n  set(name, value) {\n    this.values[name] = value;\n  }\n\n  get(name) {\n    return this.values[name];\n  }\n}\n\nexport default new Config();\n",
    "static": true,
    "longname": "/Users/morten/Projects/sampension/auth-client/src/config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "class",
    "name": "Config",
    "memberof": "src/config.js",
    "static": true,
    "longname": "src/config.js~Config",
    "access": "public",
    "export": true,
    "importPath": "authenticatornator/lib/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "pseudoExport": true,
    "interface": false
  },
  {
    "__docId__": 124,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/config.js~Config#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "values",
    "memberof": "src/config.js~Config",
    "static": false,
    "longname": "src/config.js~Config#values",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "set",
    "memberof": "src/config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/config.js~Config#set",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "get",
    "memberof": "src/config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/config.js~Config#get",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "variable",
    "name": "config",
    "memberof": "src/config.js",
    "static": true,
    "longname": "src/config.js~config",
    "access": "public",
    "export": true,
    "importPath": "authenticatornator/lib/config.js",
    "importStyle": "config",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "src/config.js~Config"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "file",
    "name": "src/index.js",
    "content": "import AuthClient from 'AuthClient';\nimport config from 'config';\nimport Store from 'Store';\nimport Crypto from 'Crypto';\n\nconfig.set('createStore', () => new Store());\nconfig.set('createCrypto', () => new Crypto());\n\nmodule.exports = AuthClient;\n",
    "static": true,
    "longname": "/Users/morten/Projects/sampension/auth-client/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 130,
    "kind": "file",
    "name": "src/index.web.js",
    "content": "import AuthClient from 'AuthClient';\nimport config from 'config';\nimport Store from 'Store.web';\nimport Crypto from 'Crypto.web';\n\nconfig.set('createStore', () => new Store());\nconfig.set('createCrypto', () => new Crypto());\n\nmodule.exports = AuthClient;\n",
    "static": true,
    "longname": "/Users/morten/Projects/sampension/auth-client/src/index.web.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "src/utils.js",
    "content": "/** @ignore */\nexport const base64URLEncode = value =>\n  value.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n",
    "static": true,
    "longname": "/Users/morten/Projects/sampension/auth-client/src/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "function",
    "name": "base64URLEncode",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~base64URLEncode",
    "access": "public",
    "export": true,
    "importPath": "authenticatornator/lib/utils.js",
    "importStyle": "{base64URLEncode}",
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# Authenticatornator\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/morten-olsen/authclient.svg)](https://greenkeeper.io/) [![Coverage Status](https://coveralls.io/repos/github/morten-olsen/authclient/badge.svg?branch=master)](https://coveralls.io/github/morten-olsen/authclient?branch=master) [![Build Status](https://www.travis-ci.org/morten-olsen/authclient.svg?branch=master)](https://www.travis-ci.org/morten-olsen/authclient) \n[![npm](https://img.shields.io/npm/dm/authenticatornator.svg)](https://www.npmjs.com/package/authenticatornator) \n[![npm](https://img.shields.io/npm/v/authenticatornator.svg)](https://www.npmjs.com/package/authenticatornator) [![Maintainability](https://api.codeclimate.com/v1/badges/7d192fd20aeadfc34bc7/maintainability)](https://codeclimate.com/github/morten-olsen/authclient/maintainability) [![Known Vulnerabilities](https://snyk.io/test/github/morten-olsen/authclient/badge.svg?targetFile=package.json)](https://snyk.io/test/github/morten-olsen/authclient?targetFile=package.json) ![eslint](https://img.shields.io/badge/eslint-airbnb-red.svg)\n\n\n* [Demo](https://morten-olsen.github.io/authclient/demo)\n* [Documentation](https://morten-olsen.github.io/authclient/)\n\n## Usage\n\n### Creating a client\n\n```javascript\nimport AuthClient from 'authenticatornator';\n\nconst authClient = new AuthClient({\n    baseUrl: 'https://your-server',\n    clientId: 'ClientId',\n    redirectUri: `${global.location.protocol}//${global.location.host}`,\n    responseTypes: ['id_token', 'token'],\n    scopes: [\n      'openid',\n      'profile',\n    ],\n  });\n```\n\n### Creating a login url\n\nA login url is obtained by calling `const url = await authClient.getLoginUrl();`. This url should then be presented to the user `window.location.href = url;`, or what is best suited for the platform that you are working on\n\n### Getting the token\n\nOnce the user has logged into the login page, they should be redirected to the `redirect_uri` with some additional information which can then be used to get the token. To exchange these informations, simply call `const token = await authClient.exchangeToken(window.location.href);`\n\nIf jusing password grant, you can simply use `const token = await authClient.getToken({ username: 'admin', password: 'god'});` or to renew a token using a refresh token `const token = await authClient.getToken({refreshToken: '...'});`\n\n## Minimal example\n\n```html\n<html>\n  <body>\n    <div></div>\n    <button>Login</button>\n    <script>\n      const boot = async () => {\n        const authClient = new AuthClient({\n          baseUrl: 'https://your-server',\n          clientId: 'ClientId',\n          redirectUri: `${global.location.protocol}//${global.location.host}`,\n          responseTypes: ['id_token', 'token'],\n          scopes: [\n            'openid',\n            'profile',\n          ],\n        });\n        const button = document.querySelector('button');\n        const view = document.querySelector('div');\n        button.onClick = async () => {\n          window.location.href = await authClient.getLoginUrl();\n        }\n        if (location.hash) {\n          const token = await authClient.exchangeToken(window.location.href);\n          view.innerHTML = JSON.stringify(token, null, '  ');\n        }\n      };\n      boot();\n    </script>\n  </body>\n</html>\n```\n",
    "longname": "/Users/morten/Projects/sampension/auth-client/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"authenticatornator\",\n  \"version\": \"0.0.0-development\",\n  \"main\": \"lib/index.js\",\n  \"browser\": \"lib/index.web.js\",\n  \"src\": \"src/index.web.js\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"demo\": \"parcel -p 3000 -d docs/demo --public-url \\\"/authclient/demo/\\\" demo/index.html\",\n    \"test:lint\": \"eslint src\",\n    \"test:jest\": \"jest\",\n    \"test\": \"npm run test:lint && npm run test:jest\",\n    \"build\": \"babel src -d lib -s\",\n    \"build:docs\": \"esdoc\",\n    \"bundle\": \"webpack\",\n    \"prepare\": \"npm run build && npm run bundle\",\n    \"publish:docs\": \"npm run build:docs && gh-pages -d docs\",\n    \"semantic-release\": \"semantic-release\",\n    \"coverage\": \"npm run test:jest && cat ./coverage/lcov.info | coveralls\",\n    \"travis-deploy-once\": \"travis-deploy-once\"\n  },\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.26.0\",\n    \"babel-core\": \"^6.26.0\",\n    \"babel-eslint\": \"^8.2.1\",\n    \"babel-loader\": \"^7.1.2\",\n    \"babel-plugin-module-resolver\": \"^3.0.0\",\n    \"babel-plugin-transform-flow-strip-types\": \"^6.22.0\",\n    \"babel-plugin-transform-private\": \"^0.1.3\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"babel-preset-stage-1\": \"^6.24.1\",\n    \"coveralls\": \"^3.0.0\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-babel-plugin\": \"^1.0.1\",\n    \"esdoc-brand-plugin\": \"^1.0.0\",\n    \"esdoc-custom-theme\": \"^1.4.2\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-importpath-plugin\": \"^1.0.1\",\n    \"esdoc-publish-html-plugin\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^4.16.0\",\n    \"eslint-config-airbnb\": \"^16.1.0\",\n    \"eslint-import-resolver-babel-module\": \"^4.0.0\",\n    \"eslint-plugin-flowtype\": \"^2.42.0\",\n    \"eslint-plugin-import\": \"^2.8.0\",\n    \"eslint-plugin-jsx-a11y\": \"^6.0.3\",\n    \"eslint-plugin-react\": \"^7.6.0\",\n    \"gh-pages\": \"^1.1.0 \",\n    \"husky\": \"^0.14.3\",\n    \"jest\": \"^22.1.4\",\n    \"parcel-bundler\": \"^1.6.2\",\n    \"semantic-release\": \"^15.0.3\",\n    \"semantic-release-cli\": \"^3.6.4\",\n    \"travis-deploy-once\": \"^4.4.0\",\n    \"uglifyjs-webpack-plugin\": \"^1.2.3\",\n    \"webpack\": \"^4.1.1\",\n    \"webpack-cli\": \"^2.0.11\"\n  },\n  \"jest\": {\n    \"coverageDirectory\": \"./coverage\",\n    \"coverageReporters\": [\n      \"json\",\n      \"lcov\",\n      \"text\",\n      \"html\"\n    ],\n    \"collectCoverage\": true,\n    \"roots\": [\n      \"./src\"\n    ],\n    \"testMatch\": [\n      \"**/?(*.)(spec|test).js?(x)\"\n    ]\n  },\n  \"dependencies\": {\n    \"axios\": \"^0.18.0\"\n  },\n  \"release\": {\n    \"branch\": \"master\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/morten-olsen/authclient.git\"\n  }\n}\n",
    "longname": "/Users/morten/Projects/sampension/auth-client/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 133,
    "kind": "testFile",
    "name": "src/AuthClient.spec.js",
    "content": "import url from 'url';\nimport axios from 'axios';\nimport querystring from 'querystring';\nimport AuthClient from './AuthClient';\nimport Crypto from './Crypto.node';\nimport Store from './Store.node';\nimport config from '../demo/config';\n\njest.mock('axios');\n\ndescribe('AuthClient', () => {\n  beforeEach(() => {\n    axios.clear();\n    axios.setMock('get', 'https://authclient-demo.eu.auth0.com/.well-known/openid-configuration', {\n      authorization_endpoint: 'https://authclient-demo.eu.auth0.com/authorize',\n      token_endpoint: 'https://authclient-demo.eu.auth0.com/token',\n    });\n    axios.setMock('post', 'https://authclient-demo.eu.auth0.com/token', (data, extra) => extra.tokenAssert(data));\n  });\n\n  describe('implicit grant', () => {\n    describe('url generator', () => {\n      it('without crypto', async () => {\n        const client = new AuthClient(config.implicit);\n        const result = await client.getLoginUrl();\n        const parsed = url.parse(result);\n        const query = querystring.parse(parsed.query);\n        expect(parsed.host).toBe('authclient-demo.eu.auth0.com');\n        expect(query.client_id).toBe(config.implicit.clientId);\n        expect(query.code_challenge).toBeUndefined();\n        expect(query.code_challenge_method).toBeUndefined();\n        expect(query.redirect_uri).toBe('about://blank');\n        expect(query.response_type).toBe('id_token token');\n        expect(query.scope).toBe('openid profile');\n        expect(query.state).toBeUndefined();\n      });\n\n      it('with crypto', async () => {\n        const client = new AuthClient({\n          ...config.implicit,\n          crypto: new Crypto(),\n        });\n        const result = await client.getLoginUrl();\n        const parsed = url.parse(result);\n        const query = querystring.parse(parsed.query);\n        expect(parsed.host).toBe('authclient-demo.eu.auth0.com');\n        expect(query.client_id).toBe(config.implicit.clientId);\n        expect(query.code_challenge).toBeDefined();\n        expect(query.code_challenge_method).toBe('S256');\n        expect(query.redirect_uri).toBe('about://blank');\n        expect(query.response_type).toBe('id_token token');\n        expect(query.scope).toBe('openid profile');\n        expect(query.state).toBeDefined();\n      });\n    });\n\n\n    describe('token exchange', () => {\n      it('with query parameter', async () => {\n        const client = new AuthClient(config.implicit);\n        const token = await client.exchangeToken('https://localhost?access_token=test');\n        expect(token.access_token).toBe('test');\n      });\n\n      it('with hash', async () => {\n        const client = new AuthClient(config.implicit);\n        const token = await client.exchangeToken('https://localhost#access_token=test');\n        expect(token.access_token).toBe('test');\n      });\n    });\n  });\n\n  describe('authentication code grant', () => {\n    describe('url generator', () => {\n      it('without crypto', async () => {\n        const client = new AuthClient(config.authCode);\n        const result = await client.getLoginUrl();\n        const parsed = url.parse(result);\n        const query = querystring.parse(parsed.query);\n        expect(parsed.host).toBe('authclient-demo.eu.auth0.com');\n        expect(query.client_id).toBe(config.authCode.clientId);\n        expect(query.code_challenge).toBeUndefined();\n        expect(query.code_challenge_method).toBeUndefined();\n        expect(query.redirect_uri).toBe('about://blank');\n        expect(query.response_type).toBe('code');\n        expect(query.scope).toBe('openid profile');\n        expect(query.state).toBeUndefined();\n      });\n\n      it('with crypto', async () => {\n        const client = new AuthClient({\n          ...config.authCode,\n          crypto: new Crypto(),\n        });\n        const result = await client.getLoginUrl();\n        const parsed = url.parse(result);\n        const query = querystring.parse(parsed.query);\n        expect(parsed.host).toBe('authclient-demo.eu.auth0.com');\n        expect(query.client_id).toBe(config.authCode.clientId);\n        expect(query.code_challenge).toBeDefined();\n        expect(query.code_challenge_method).toBe('S256');\n        expect(query.redirect_uri).toBe('about://blank');\n        expect(query.response_type).toBe('code');\n        expect(query.scope).toBe('openid profile');\n        expect(query.state).toBeDefined();\n      });\n    });\n\n    describe('token exchange', () => {\n      it('without crypto', async () => {\n        const client = new AuthClient(config.authCode);\n        axios.setExtra({\n          tokenAssert: (data) => {\n            expect(data.client_id).toBe(config.authCode.clientId);\n            expect(data.client_secret).toBe(config.authCode.clientSecret);\n            expect(data.redirect_uri).toBe('about://blank');\n            expect(data.grant_type).toBe('authorization_code');\n            expect(data.username).toBeUndefined();\n            expect(data.password).toBeUndefined();\n            expect(data.code).toBe('test');\n            expect(data.scope).toBe('openid profile');\n            expect(data.refresh_token).toBeUndefined();\n            expect(data.code_verifier).toBeUndefined();\n            return {\n              access_token: 'test2',\n            };\n          },\n        });\n        const token = await client.exchangeToken('https://localhost?code=test');\n        expect(token.access_token).toBe('test2');\n      });\n\n      it('with crypto', async () => {\n        const store = new Store();\n        const crypto = new Crypto();\n        const client = new AuthClient({\n          ...config.authCode,\n          crypto,\n          store,\n        });\n        const result = await client.getLoginUrl();\n        const parsed = url.parse(result);\n        const query = querystring.parse(parsed.query);\n        expect(query.state).toBeDefined();\n        axios.setExtra({\n          tokenAssert: async (data) => {\n            expect(data.client_id).toBe(config.authCode.clientId);\n            expect(data.client_secret).toBe(config.authCode.clientSecret);\n            expect(data.redirect_uri).toBe('about://blank');\n            expect(data.grant_type).toBe('authorization_code');\n            expect(data.username).toBeUndefined();\n            expect(data.password).toBeUndefined();\n            expect(data.code).toBe('test');\n            expect(data.scope).toBe('openid profile');\n            expect(data.refresh_token).toBeUndefined();\n            expect(data.code_verifier).toBeDefined();\n            const challenge = query.code_challenge;\n            expect(crypto.bytesToBase64(await crypto.sha256(data.code_verifier))).toBe(challenge);\n            expect(challenge).toBeDefined();\n            return {\n              access_token: 'test2',\n            };\n          },\n        });\n        const token = await client.exchangeToken(`https://localhost?code=test&state=${query.state}`);\n        expect(token.access_token).toBe('test2');\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/Users/morten/Projects/sampension/auth-client/src/AuthClient.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "src/AuthClient.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0",
    "access": null,
    "description": "AuthClient",
    "lineNumber": 15
  },
  {
    "__docId__": 135,
    "kind": "test",
    "name": "describe1",
    "testId": 1,
    "memberof": "src/AuthClient.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0.describe1",
    "access": null,
    "description": "implicit grant",
    "lineNumber": 25
  },
  {
    "__docId__": 136,
    "kind": "test",
    "name": "describe2",
    "testId": 2,
    "memberof": "src/AuthClient.spec.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0.describe1.describe2",
    "access": null,
    "description": "url generator",
    "lineNumber": 26
  },
  {
    "__docId__": 137,
    "kind": "test",
    "name": "it3",
    "testId": 3,
    "memberof": "src/AuthClient.spec.js~describe0.describe1.describe2",
    "testDepth": 3,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0.describe1.describe2.it3",
    "access": null,
    "description": "without crypto",
    "lineNumber": 27
  },
  {
    "__docId__": 138,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "src/AuthClient.spec.js~describe0.describe1.describe2",
    "testDepth": 3,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0.describe1.describe2.it4",
    "access": null,
    "description": "with crypto",
    "lineNumber": 42
  },
  {
    "__docId__": 139,
    "kind": "test",
    "name": "describe5",
    "testId": 5,
    "memberof": "src/AuthClient.spec.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0.describe1.describe5",
    "access": null,
    "description": "token exchange",
    "lineNumber": 60
  },
  {
    "__docId__": 140,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "src/AuthClient.spec.js~describe0.describe1.describe5",
    "testDepth": 3,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0.describe1.describe5.it6",
    "access": null,
    "description": "with query parameter",
    "lineNumber": 61
  },
  {
    "__docId__": 141,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "src/AuthClient.spec.js~describe0.describe1.describe5",
    "testDepth": 3,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0.describe1.describe5.it7",
    "access": null,
    "description": "with hash",
    "lineNumber": 67
  },
  {
    "__docId__": 142,
    "kind": "test",
    "name": "describe8",
    "testId": 8,
    "memberof": "src/AuthClient.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0.describe8",
    "access": null,
    "description": "authentication code grant",
    "lineNumber": 75
  },
  {
    "__docId__": 143,
    "kind": "test",
    "name": "describe9",
    "testId": 9,
    "memberof": "src/AuthClient.spec.js~describe0.describe8",
    "testDepth": 2,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0.describe8.describe9",
    "access": null,
    "description": "url generator",
    "lineNumber": 76
  },
  {
    "__docId__": 144,
    "kind": "test",
    "name": "it10",
    "testId": 10,
    "memberof": "src/AuthClient.spec.js~describe0.describe8.describe9",
    "testDepth": 3,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0.describe8.describe9.it10",
    "access": null,
    "description": "without crypto",
    "lineNumber": 77
  },
  {
    "__docId__": 145,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "src/AuthClient.spec.js~describe0.describe8.describe9",
    "testDepth": 3,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0.describe8.describe9.it11",
    "access": null,
    "description": "with crypto",
    "lineNumber": 92
  },
  {
    "__docId__": 146,
    "kind": "test",
    "name": "describe12",
    "testId": 12,
    "memberof": "src/AuthClient.spec.js~describe0.describe8",
    "testDepth": 2,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0.describe8.describe12",
    "access": null,
    "description": "token exchange",
    "lineNumber": 110
  },
  {
    "__docId__": 147,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "src/AuthClient.spec.js~describe0.describe8.describe12",
    "testDepth": 3,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0.describe8.describe12.it13",
    "access": null,
    "description": "without crypto",
    "lineNumber": 111
  },
  {
    "__docId__": 148,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "src/AuthClient.spec.js~describe0.describe8.describe12",
    "testDepth": 3,
    "static": true,
    "longname": "src/AuthClient.spec.js~describe0.describe8.describe12.it14",
    "access": null,
    "description": "with crypto",
    "lineNumber": 134
  }
]